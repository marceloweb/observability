version: "3"
services: 
    jaeger-collector:
        image: jaegertracing/jaeger-collector
        command: ["--cassandra.keyspace=jaeger_v1_dc1", "--cassandra.servers=cassandra", "--collector.zipkin.http-port=9411"]
        ports:
          - "14269"
          - "14268:14268"
          - "14250"
          - "9411:9411"
        restart: on-failure
        depends_on:
          - cassandra-schema
        environment: 
            CASSANDRA_SERVERS: cassandra
  
    jaeger-query:
        image: jaegertracing/jaeger-query
        command: ["--cassandra.keyspace=jaeger_v1_dc1", "--cassandra.servers=cassandra"]
        ports:
            - "16686:16686"
            - "16687"
        restart: on-failure
        depends_on:
            - cassandra-schema
        environment: 
            CASSANDRA_SERVERS: cassandra

    jaeger-agent:
        image: jaegertracing/jaeger-agent
        command: ["--reporter.grpc.host-port=jaeger-collector:14250"]
        ports:
            - "5775:5775/udp"
            - "6831:6831/udp"
            - "6832:6832/udp"
            - "5778:5778"
        restart: on-failure
        depends_on:
            - jaeger-collector

    cassandra:
        image: cassandra:3.9

    cassandra-schema:
        image: jaegertracing/jaeger-cassandra-schema
        depends_on:
            - cassandra

    demo:
        image: openjdk:11
        ports:
            - "8082:8080"
        volumes:
            - "./applications/demo/target:/httpd:rw"
        environment: 
            JAEGER_HOST: jaeger-agent
            JAEGER_PORT: 6831
        entrypoint: ["java","-Djava.security.egd=file:/dev/./urandom","-jar","httpd/demo-0.0.1-SNAPSHOT.jar"]
    
    prometheus:
        image: prom/prometheus
        ports: 
            - "9090:9090"
        volumes: 
            - "./tmp/prometheus.yml:/etc/prometheus/prometheus.yml"
        restart: always

    grafana:
        image: grafana/grafana:latest
        ports: 
            - "3000:3000"

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.9.1
        ports: 
            - "9200:9200"
            - "9300:9300"
        restart: always
        volumes:
            - "./tmp/elasticsearch.yml:/usr/share/elasticsearch/config/metricbeat.yml"
        environment:
            - discovery.type=single-node

    kibana:
        image: docker.elastic.co/kibana/kibana:7.8.0
        container_name: kibana
        environment:
            SERVER_NAME: localhost
            ELASTICSEARCH_URL: http://http://172.19.0.1:9200/
        ports:
            - 5601:5601
        depends_on: 
            - elasticsearch

    metricbeat:
        image: docker.elastic.co/beats/metricbeat:6.3.2
        environment:
            - setup.kibana.host=kibana:5601
            - output.elasticsearch.hosts=["elasticsearch:9200"]
        depends_on: 
            - elasticsearch